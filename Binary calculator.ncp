<Project>
  <Name>Binary calculator</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Main</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>CalculatorMain</Name>
        <Access>Public</Access>
        <Location left="843" top="346" />
        <Size width="272" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public const int NO_MODE = 0</Member>
        <Member type="Field">public const int BINARY_CAL_MODE = 1</Member>
        <Member type="Field">public const int INT_CAL_MODE = 2</Member>
        <Member type="Field">private readonly List&lt;string&gt; mode_names = new List&lt;string&gt;()</Member>
        <Member type="Field">CalHistory calHistory</Member>
        <Member type="Constructor">CalculatorMain()</Member>
        <Member type="Method">private void AddModeNames()</Member>
        <Member type="Method">public string[] GetModes()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BinaryToIntCal</Name>
        <Access>Public</Access>
        <Location left="1087" top="1394" />
        <Size width="197" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Binary { get; }</Member>
        <Member type="Property">public int Result { get; }</Member>
        <Member type="Constructor">public BinaryToIntCal(string binary)</Member>
        <Member type="Method">private int GetBinaryInt(char i)</Member>
        <Member type="Method">private int GetBinaryPower(int power)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IntToBinaryCal</Name>
        <Access>Public</Access>
        <Location left="657" top="1394" />
        <Size width="217" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Integer { get; }</Member>
        <Member type="Property">public string Result { get; }</Member>
        <Member type="Constructor">public IntToBinaryCal(int integer)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICal</Name>
        <Access>Public</Access>
        <Location left="899" top="1136" />
        <Size width="162" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Calculate()</Member>
        <Member type="Method">string GetInput()</Member>
        <Member type="Method">bool CheckInput()</Member>
        <Member type="Method">string GetDefaultResult()</Member>
        <Member type="Method">string RetrieveError()</Member>
      </Entity>
      <Entity type="Class">
        <Name>Form1</Name>
        <Access>Public</Access>
        <Location left="281" top="346" />
        <Size width="413" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Form1()</Member>
        <Member type="Method">private void btnCalculate_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryRecently_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryNext_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryPrevious_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryLast_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void cmbModeSelection_SelectedIndexChanged(object sender, EventArgs e)</Member>
        <Member type="Method">private void UpdateCalculation(object sender, EventArgs e)</Member>
        <Member type="Method">private void AlterBinaryChain(object sender, EventArgs args)</Member>
        <Member type="Method">private void SetupBinaryNumbericUpDown()</Member>
        <Member type="Method">private void BindingModeSelectionBox()</Member>
        <Member type="Method">private void SetupHistorySection()</Member>
        <Member type="Method">private void DisplayNotification(object sender, string notification)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CalHistory</Name>
        <Access>Public</Access>
        <Location left="859" top="714" />
        <Size width="221" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private List&lt;ICal&gt; calculations</Member>
        <Member type="Constructor">public CalHistory()</Member>
        <Member type="Event">public event EventHandler CurrentCalChanged</Member>
        <Member type="Property">public int No { get; }</Member>
        <Member type="Property">public ICal CurrentCal { get; }</Member>
        <Member type="Property">public int NoCalculations { get; }</Member>
        <Member type="Method">public void NextCalculation()</Member>
        <Member type="Method">public void PreviousCalculation()</Member>
        <Member type="Method">public void RecentCalculation()</Member>
        <Member type="Method">public void LastCalculation()</Member>
        <Member type="Method">private void InitializeIndex()</Member>
        <Member type="Method">public void AddNewCal(ICal cal)</Member>
        <Member type="Method">private ICal GetCalculationByIndex(int index)</Member>
        <Member type="Method">public void OnCurrentCalChange()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IBinaryExtend</Name>
        <Access>Public</Access>
        <Location left="646" top="1244" />
        <Size width="167" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string GetExtendedBinary()</Member>
      </Entity>
      <Entity type="Class">
        <Name>CalculatorProcessor</Name>
        <Access>Public</Access>
        <Location left="414" top="760" />
        <Size width="259" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static ICal MakeCalculation(int mode, string input)</Member>
        <Member type="Event">public static event EventHandler&lt;string&gt; ErrorNotifReceived</Member>
        <Member type="Method">private static void SendErrorNotification(string notification)</Member>
        <Modifier>Static</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="4" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="1" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1190</X>
          <Y>1345</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>986</X>
          <Y>1326</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>770</X>
          <Y>1336</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>986</X>
          <Y>1336</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="0" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>985</X>
          <Y>681</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>980</X>
          <Y>1082</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>980</X>
          <Y>1111</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="2" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="4" second="7">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="7" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>853</X>
          <Y>1168</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>