<Project>
  <Name>Binary calculator</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Main</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>CalculatorMain</Name>
        <Access>Public</Access>
        <Location left="796" top="391" />
        <Size width="294" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly List&lt;string&gt; mode_names = new List&lt;string&gt;()</Member>
        <Member type="Field">private readonly ICalCollection _calculations</Member>
        <Member type="Field">private readonly CIListStraight _cals</Member>
        <Member type="Constructor">CalculatorMain()</Member>
        <Member type="Property">public ICalCollection CollectionCal { get; }</Member>
        <Member type="Property">public CIListStraight MainCal { get; }</Member>
        <Member type="Method">private void AddModeNames()</Member>
        <Member type="Method">public string[] GetModes()</Member>
        <Member type="Method">private void SetupMainIterator(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BinaryToIntCal</Name>
        <Access>Public</Access>
        <Location left="1070" top="1229" />
        <Size width="197" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _binary</Member>
        <Member type="Field">private int _int_result</Member>
        <Member type="Constructor">public BinaryToIntCal(string input)</Member>
        <Member type="Method">private int GetBinaryInt(char i)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IntToBinaryCal</Name>
        <Access>Public</Access>
        <Location left="640" top="1229" />
        <Size width="330" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly int _int</Member>
        <Member type="Field">private string _binary_result</Member>
        <Member type="Constructor">public IntToBinaryCal(string input)</Member>
        <Member type="Method">private Stack&lt;int&gt; GetPoweredBy2(int input)</Member>
        <Member type="Method">private int GetBinaryChainLength(string input, int required_length)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICal</Name>
        <Access>Public</Access>
        <Location left="836" top="960" />
        <Size width="162" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string Input { get; }</Member>
        <Member type="Property">string Result { get; }</Member>
        <Member type="Method">void Calculate()</Member>
        <Member type="Method">bool CheckInput()</Member>
      </Entity>
      <Entity type="Class">
        <Name>Form1</Name>
        <Access>Public</Access>
        <Location left="282" top="338" />
        <Size width="413" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">CalculatorMain main</Member>
        <Member type="Constructor">public Form1()</Member>
        <Member type="Property">private bool InputUI_Enabled { get; set; }</Member>
        <Member type="Property">private bool BinaryUI_Visible { get; set; }</Member>
        <Member type="Method">private void btnCalculate_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryRecently_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryNext_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryPrevious_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryLast_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void cmbModeSelection_SelectedIndexChanged(object sender, EventArgs e)</Member>
        <Member type="Method">private void UpdateCalculation(object sender, EventArgs e)</Member>
        <Member type="Method">private void AlterBinaryChain(object sender, EventArgs args)</Member>
        <Member type="Method">private void SetupBinaryNumbericUpDown()</Member>
        <Member type="Method">private void BindingModeSelectionBox()</Member>
        <Member type="Method">private void SetupHistorySection()</Member>
        <Member type="Method">private void DisplayNotification(object sender, NotificationTriggeredEventArgs n)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IBinaryExtend</Name>
        <Access>Public</Access>
        <Location left="560" top="1057" />
        <Size width="217" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string GetExtendedBinary(int length)</Member>
      </Entity>
      <Entity type="Class">
        <Name>CalculatorProcessor</Name>
        <Access>Public</Access>
        <Location left="414" top="760" />
        <Size width="372" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public const int NO_MODE = 0</Member>
        <Member type="Field">public const int BINARY_INT_MODE = 1</Member>
        <Member type="Field">public const int INT_BINARY_MODE = 2</Member>
        <Member type="Field">public const int INT_HEX_MODE = 3</Member>
        <Member type="Event">public static event EventHandler&lt;NotificationTriggeredEventArgs&gt; NotificationTriggered</Member>
        <Member type="Method">public static ICal MakeCalculation(string input, int mode)</Member>
        <Member type="Method">public static void SendNotification(string notification)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NotificationTriggeredEventArgs</Name>
        <Access>Public</Access>
        <Location left="75" top="789" />
        <Size width="264" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NotificationTriggeredEventArgs(string message)</Member>
        <Member type="Property">public string Message { get; }</Member>
        <Member type="Method">public string PrintMessage()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CIListStraight</Name>
        <Access>Public</Access>
        <Location left="1407" top="731" />
        <Size width="162" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly CCList _collection</Member>
        <Member type="Field">private int _index</Member>
        <Member type="Field">private ICal _currentCal</Member>
        <Member type="Constructor">public CIListStraight(CCList cals)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICalIterator</Name>
        <Access>Public</Access>
        <Location left="1352" top="353" />
        <Size width="214" height="248" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler CurrentCalChanged</Member>
        <Member type="Property">int No { get; }</Member>
        <Member type="Property">ICal CurrentCal { get; }</Member>
        <Member type="Property">int NoCalculations { get; }</Member>
        <Member type="Property">bool IsHead { get; }</Member>
        <Member type="Property">bool IsTail { get; set; }</Member>
        <Member type="Method">void NextCalculation()</Member>
        <Member type="Method">void PreviousCalculation()</Member>
        <Member type="Method">void RecentCalculation()</Member>
        <Member type="Method">void LastCalculation()</Member>
        <Member type="Method">void OnCurrentCalChange()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICalCollection</Name>
        <Access>Public</Access>
        <Location left="1131" top="614" />
        <Size width="197" height="180" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler CollectionChanged</Member>
        <Member type="Method">ICal GetCalculation(int index)</Member>
        <Member type="Method">void AddNewCal(ICal cal)</Member>
        <Member type="Method">int GetNumberOfCals()</Member>
        <Member type="Method">bool IndexIsInRange(int index)</Member>
        <Member type="Method">void OnCollectionChange()</Member>
        <Member type="Method">ICalIterator GetForwardIterator()</Member>
      </Entity>
      <Entity type="Class">
        <Name>CCList</Name>
        <Access>Public</Access>
        <Location left="836" top="760" />
        <Size width="162" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly List&lt;ICal&gt; _cals</Member>
        <Member type="Constructor">public CCList()</Member>
        <Member type="Constructor">public CCList(List&lt;ICal&gt; cals)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IntToHexCal</Name>
        <Access>Public</Access>
        <Location left="1331" top="1229" />
        <Size width="244" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly int _int</Member>
        <Member type="Field">private string _hex_result</Member>
        <Member type="Constructor">public IntToHexCal(int input)</Member>
        <Member type="Method">private char ConvertIntToHexChar(int i)</Member>
        <Member type="Method">private string FinalizingHexResult(Stack&lt;char&gt; s)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HexToIntCal</Name>
        <Access>Public</Access>
        <Location left="1657" top="1229" />
        <Size width="198" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _hex</Member>
        <Member type="Field">private int _int_result</Member>
        <Member type="Constructor">public HexToIntCal(string input)</Member>
        <Member type="Method">private int ConvertHexCharToInt(char c)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1173</X>
          <Y>1180</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>923</X>
          <Y>1133</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>753</X>
          <Y>1171</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>923</X>
          <Y>1143</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="10" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1363</X>
          <Y>668</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1422</X>
          <Y>642</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1024</X>
          <Y>826</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1104</X>
          <Y>706</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="8" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1478</X>
          <Y>674</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1362</X>
          <Y>860</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1071</X>
          <Y>860</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>909</X>
          <Y>913</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>909</X>
          <Y>935</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="11" second="6">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="10">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1163</X>
          <Y>528</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1215</X>
          <Y>586</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="4" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="4" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="6" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>586</X>
          <Y>1000</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="12" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1426</X>
          <Y>1197</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>923</X>
          <Y>1118</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="13" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1760</X>
          <Y>1197</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>923</X>
          <Y>1115</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="4" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>173</X>
          <Y>586</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="6" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="4" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>34</X>
          <Y>507</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>507</X>
          <Y>1095</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Current</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>CalculatorProcessor</Name>
        <Access>Public</Access>
        <Location left="434" top="780" />
        <Size width="372" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public const int NO_MODE = 0</Member>
        <Member type="Field">public const int BINARY_INT_MODE = 1</Member>
        <Member type="Field">public const int INT_BINARY_MODE = 2</Member>
        <Member type="Field">public const int INT_HEX_MODE = 3</Member>
        <Member type="Event">public static event EventHandler&lt;NotificationTriggeredEventArgs&gt; NotificationTriggered</Member>
        <Member type="Method">public static ICal MakeCalculation(string input, int mode)</Member>
        <Member type="Method">public static void SendNotification(string notification)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICalCollection</Name>
        <Access>Public</Access>
        <Location left="1151" top="634" />
        <Size width="197" height="180" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler CollectionChanged</Member>
        <Member type="Method">ICal GetCalculation(int index)</Member>
        <Member type="Method">void AddNewCal(ICal cal)</Member>
        <Member type="Method">int GetNumberOfCals()</Member>
        <Member type="Method">bool IndexIsInRange(int index)</Member>
        <Member type="Method">void OnCollectionChange()</Member>
        <Member type="Method">ICalIterator GetForwardIterator()</Member>
      </Entity>
      <Entity type="Class">
        <Name>HexToIntCal</Name>
        <Access>Public</Access>
        <Location left="1677" top="1249" />
        <Size width="198" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _hex</Member>
        <Member type="Field">private int _int_result</Member>
        <Member type="Constructor">public HexToIntCal(string input)</Member>
        <Member type="Method">private int ConvertHexCharToInt(char c)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IntToHexCal</Name>
        <Access>Public</Access>
        <Location left="1351" top="1249" />
        <Size width="244" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly int _int</Member>
        <Member type="Field">private string _hex_result</Member>
        <Member type="Constructor">public IntToHexCal(int input)</Member>
        <Member type="Method">private char ConvertIntToHexChar(int i)</Member>
        <Member type="Method">private string FinalizingHexResult(Stack&lt;char&gt; s)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CCList</Name>
        <Access>Public</Access>
        <Location left="856" top="780" />
        <Size width="162" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly List&lt;ICal&gt; _cals</Member>
        <Member type="Constructor">public CCList()</Member>
        <Member type="Constructor">public CCList(List&lt;ICal&gt; cals)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICalIterator</Name>
        <Access>Public</Access>
        <Location left="1372" top="373" />
        <Size width="214" height="248" />
        <Collapsed>False</Collapsed>
        <Member type="Event">event EventHandler CurrentCalChanged</Member>
        <Member type="Property">int No { get; }</Member>
        <Member type="Property">ICal CurrentCal { get; }</Member>
        <Member type="Property">int NoCalculations { get; }</Member>
        <Member type="Property">bool IsHead { get; }</Member>
        <Member type="Property">bool IsTail { get; set; }</Member>
        <Member type="Method">void NextCalculation()</Member>
        <Member type="Method">void PreviousCalculation()</Member>
        <Member type="Method">void RecentCalculation()</Member>
        <Member type="Method">void LastCalculation()</Member>
        <Member type="Method">void OnCurrentCalChange()</Member>
      </Entity>
      <Entity type="Class">
        <Name>CIListStraight</Name>
        <Access>Public</Access>
        <Location left="1427" top="751" />
        <Size width="162" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly CCList _collection</Member>
        <Member type="Field">private int _index</Member>
        <Member type="Field">private ICal _currentCal</Member>
        <Member type="Constructor">public CIListStraight(CCList cals)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NotificationTriggeredEventArgs</Name>
        <Access>Public</Access>
        <Location left="95" top="809" />
        <Size width="264" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NotificationTriggeredEventArgs(string message)</Member>
        <Member type="Property">public string Message { get; }</Member>
        <Member type="Method">public string PrintMessage()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IBinaryExtend</Name>
        <Access>Public</Access>
        <Location left="580" top="1077" />
        <Size width="217" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string GetExtendedBinary(int length)</Member>
      </Entity>
      <Entity type="Class">
        <Name>Form1</Name>
        <Access>Public</Access>
        <Location left="302" top="358" />
        <Size width="413" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">CalculatorMain main</Member>
        <Member type="Constructor">public Form1()</Member>
        <Member type="Property">private bool InputUI_Enabled { get; set; }</Member>
        <Member type="Property">private bool BinaryUI_Visible { get; set; }</Member>
        <Member type="Method">private void btnCalculate_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryRecently_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryNext_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryPrevious_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void btnCalHistoryLast_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void cmbModeSelection_SelectedIndexChanged(object sender, EventArgs e)</Member>
        <Member type="Method">private void UpdateCalculation(object sender, EventArgs e)</Member>
        <Member type="Method">private void AlterBinaryChain(object sender, EventArgs args)</Member>
        <Member type="Method">private void SetupBinaryNumbericUpDown()</Member>
        <Member type="Method">private void BindingModeSelectionBox()</Member>
        <Member type="Method">private void SetupHistorySection()</Member>
        <Member type="Method">private void DisplayNotification(object sender, NotificationTriggeredEventArgs n)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICal</Name>
        <Access>Public</Access>
        <Location left="856" top="980" />
        <Size width="162" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Property">string Input { get; }</Member>
        <Member type="Property">string Result { get; }</Member>
        <Member type="Method">void Calculate()</Member>
        <Member type="Method">bool CheckInput()</Member>
      </Entity>
      <Entity type="Class">
        <Name>IntToBinaryCal</Name>
        <Access>Public</Access>
        <Location left="660" top="1249" />
        <Size width="330" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly int _int</Member>
        <Member type="Field">private string _binary_result</Member>
        <Member type="Constructor">public IntToBinaryCal(string input)</Member>
        <Member type="Method">private Stack&lt;int&gt; GetPoweredBy2(int input)</Member>
        <Member type="Method">private int GetBinaryChainLength(string input, int required_length)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BinaryToIntCal</Name>
        <Access>Public</Access>
        <Location left="1090" top="1249" />
        <Size width="197" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _binary</Member>
        <Member type="Field">private int _int_result</Member>
        <Member type="Constructor">public BinaryToIntCal(string input)</Member>
        <Member type="Method">private int GetBinaryInt(char i)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CalculatorMain</Name>
        <Access>Public</Access>
        <Location left="816" top="411" />
        <Size width="294" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly List&lt;string&gt; mode_names = new List&lt;string&gt;()</Member>
        <Member type="Field">private readonly ICalCollection _calculations</Member>
        <Member type="Field">private readonly CIListStraight _cals</Member>
        <Member type="Constructor">CalculatorMain()</Member>
        <Member type="Property">public ICalCollection CollectionCal { get; }</Member>
        <Member type="Property">public CIListStraight MainCal { get; }</Member>
        <Member type="Method">private void AddModeNames()</Member>
        <Member type="Method">public string[] GetModes()</Member>
        <Member type="Method">private void SetupMainIterator(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="9" second="8">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>54</X>
          <Y>527</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>527</X>
          <Y>1115</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="0" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>606</X>
          <Y>1020</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="0" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="9" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="9" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>193</X>
          <Y>606</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="4" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>929</X>
          <Y>933</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>929</X>
          <Y>955</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="2" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1780</X>
          <Y>1217</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>943</X>
          <Y>1135</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1446</X>
          <Y>1217</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>943</X>
          <Y>1138</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="9" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="13" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="13" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1183</X>
          <Y>548</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1235</X>
          <Y>606</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1382</X>
          <Y>880</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1091</X>
          <Y>880</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="6" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1498</X>
          <Y>694</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="4" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1044</X>
          <Y>846</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1124</X>
          <Y>726</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="1" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1383</X>
          <Y>688</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1442</X>
          <Y>662</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="11" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>773</X>
          <Y>1191</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>943</X>
          <Y>1163</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="12" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1193</X>
          <Y>1200</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>943</X>
          <Y>1153</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>